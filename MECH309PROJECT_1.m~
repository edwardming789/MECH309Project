%%%                 MECH 309 - Numerical Methods in Mech Eng                 %%%
 
% Presented to Prof Siva Nadarajah Winter 2019 - November 22th
 
%Yiming Yao 260769906
%Zechen Ren 260765431
%
 
clear all
close all
clc
 
%Known Variables
 
gamma = 1.4; %specific heat ratio for air
R = 287.058; %J*kg^?1*K^?1 gas constant
Tinf = 293; %K freestream static temperature
Pinf = 100; %kN/m^2 freestream static pressure
c = 340; %m/s speed of sound, assumed constant ???
x = 50; %x-direction domain
y = 50; %y-direction domain
Minf = 0.2; %Mach number of freestream
Uinf = Minf * c; %Flow speed of freestream 
 
%Initializing Variables 
Nx = 60; % x direction grid
Ny = 60; % y direction grid
 
dx = x/Nx; % grid discrete distance
dy = y/Ny; % grid discrete distance
 
phi = zeros (Nx,Ny); % phi initialization
miu = zeros (Nx,Ny); % miu initialization
cp = zeros (Nx,Ny); % cp initialization
 
j = -1; % y direction tracing
i = -1; % x direction tracing
 
u_ = -1; % local phi derivative to x initialization
v_ = -1; % local phi derivative to y initialization
 
m = -1; % Mech number locally
A = zeros (Nx,Ny); % initialize A matrix
 
error = Inf;
count = 0;
 
% START
%Boundary conditon
while (error > 10^-2 && count < 1000)
    count = count + 1;
    phikm1 = phi; 
 
%update phi at second bottom row, neummann at x != 20,21
%update phi at second bottom row, neummann at x  = 20,21
for  k = 2:Nx-1 
    if k * x / Nx < 20 || k * x / Nx > 21
        phi ( Ny, k) = phi ( Ny -1 , k) ;
    else
        dydx = CalAirfoil(k * x / Nx);
        phi ( Ny, k) = phi ( Ny -1 , k) - dy *  Uinf * dydx;
    end
end 
%Point Gaussi-Seidal
for i = 3 : Nx-1
    %for j = Ny-1 : -1 :2
    for 
        [a,b,cp(j,i)]= CalA_Miu(phi, i, j, Uinf, Minf, gamma, dx, dy,c);
        A(j,i) = a;
        miu(j,i)= b;
        phi (j,i) = -(...
             ( ( 1-miu(j,i) * A(j,i))/(dx)^2 ) * phi(j,i+1)...
            +( ( miu(j,i-1) * A(j,i-1) )/(dx)^2 ) * phi(j,i-2) ...
            +( ( 1/(dy)^2) * phi(j+1,i) )...
            +( ( 1/(dy)^2) * phi(j-1,i) )...
            +( ( (1-miu(j,i)) * A(j,i) / (dx)^2 - 2*miu(j,i-1) * A(j,i-1) / (dx)^2) * phi(j,i-1))...
            ) / ( miu(j,i-1)*A(j,i-1) / (dx)^2 - 2*(1-miu(j,i))*A(j,i) / (dx)^2 - 2/(dy)^2 );
    end
end
 
error = norm (phikm1 - phi);
end
%Plots
pcolor(


