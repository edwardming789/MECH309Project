%%%                 MECH 309 - Numerical Methods in Mech Eng                 %%%
 
% Presented to Prof Siva Nadarajah Winter 2019 - November 22th
 
%Yiming Yao 260769906
%Zechen Ren 260765431
%
 
clear all
close all
clc
 
%Known Variables
 
gamma = 1.4; %specific heat ratio for air
R = 287.058; %J*kg^?1*K^?1 gas constant
Tinf = 293; %K freestream static temperature
Pinf = 100; %kN/m^2 freestream static pressure
c = 340; %m/s speed of sound, assumed constant ???
x = 50; %x-direction domain
y = 50; %y-direction domain
Minf = 0.2; %Mach number of freestream
Uinf = Minf * c; %Flow speed of freestream 
 
%Initializing Variables 
Nx = 60; % x direction grid
Ny = 60; % y direction grid
 
dx = x/Nx; % grid discrete distance
dy = y/Ny; % grid discrete distance
 
phi = zeros ((Nx-3)*(Ny-2),1); % phi initialization
phiNew = zeros ((Nx-3)*(Ny-2),1); % phi initialization
miu = zeros ((Nx-3)*(Ny-2),1); % miu initialization
cp = zeros ((Nx-3)*(Ny-2),1); % cp initialization
 
j = -1; % y direction tracing
i = -1; % x direction tracing
 
u_ = -1; % local phi derivative to x initialization
v_ = -1; % local phi derivative to y initialization
 
m = -1; % Mech number locally
A = zeros ((Nx-3)*(Ny-2),1); % initialize A matrix
 
error = Inf;
count = 0;
 
% START
% Boundary conditon
% while (error > 10^-2 && count < 1000)
%     count = count + 1;
%     phikm1 = phi; 
%  
% update phi at second bottom row, neummann at x != 20,21
% update phi at second bottom row, neummann at x  = 20,21
% for  k = 2:Nx-1 
%     if k * x / Nx < 20 || k * x / Nx > 21
%         phi ( Ny, k) = phi ( Ny -1 , k) ;
%     else
%         dydx = CalAirfoil(k * x / Nx);
%         phi ( Ny, k) = phi ( Ny -1 , k) - dy *  Uinf * dydx;
%     end
% end 
% Point Gaussi-Seidal
% for i = 3 : Nx-1
%     for j = Ny-1 : -1 :2
%     for j = 2 : Ny-1
%         [a,b,cp(j,i)]= CalA_Miu(phi, i, j, Uinf, Minf, gamma, dx, dy,c);
%         A(j,i) = a;
%         miu(j,i)= b;
%         phi (j,i) = -(...
%              ( ( 1-miu(j,i) * A(j,i))/(dx)^2 ) * phi(j,i+1)...
%             +( ( miu(j,i-1) * A(j,i-1) )/(dx)^2 ) * phi(j,i-2) ...
%             +( ( 1/(dy)^2) * phi(j+1,i) )...
%             +( ( 1/(dy)^2) * phi(j-1,i) )...
%             +( ( (1-miu(j,i)) * A(j,i) / (dx)^2 - 2*miu(j,i-1) * A(j,i-1) / (dx)^2) * phi(j,i-1))...
%             ) / ( miu(j,i-1)*A(j,i-1) / (dx)^2 - 2*(1-miu(j,i))*A(j,i) / (dx)^2 - 2/(dy)^2 );
%     end
% end
%  
% error = norm (phikm1 - phi);
% end
% Plots
% pcolor(phi);
% colorbar;

% -phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
% -phi(counter-2,1) * ( miu(counter-1,1) * A(counter-1,1) )/(dx)^2 ...
for counter = 1:(Nx-3)*(Ny-2)
    [A(counter,1),miu(counter,1),cp(counter,1)]= CalA_Miu(phi, counter, Nx, Uinf, Minf, gamma, dx, dy,c);
    if counter == 1 % (3,2) bottom left 1
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter+1,1) * (1-miu(counter,1)*A(counter,1))/(dx)^2 ...
               -phi(counter+Nx-3,1) * 1/(dy)^2 ...
               -phi(counter,1) * ( 1/(dy)^2));
    elseif counter == 2 % (4,2) bottom left 2
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter+1,1) * (1-miu(counter,1)*A(counter,1))/(dx)^2 ...
               -phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
               -phi(counter+Nx-3,1) * 1/(dy)^2 ...
               -phi(counter,1) * ( 1/(dy)^2));
    elseif counter >= 3 && counter < Nx-3 % (:,2) bottom
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter+1,1) * (1-miu(counter,1)*A(counter,1))/(dx)^2 ...
               -phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
               -phi(counter-2,1) * ( miu(counter-1,1) * A(counter-1,1) )/(dx)^2 ...
               -phi(counter+Nx-3,1) * 1/(dy)^2 ...
               -phi(counter,1) * ( 1/(dy)^2));
    elseif counter == Nx-3 % (2,Ny-1) bottom right
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
               -phi(counter-2,1) * ( miu(counter-1,1) * A(counter-1,1) )/(dx)^2 ...
               -phi(counter+Nx-3,1) * 1/(dy)^2 ...
               -phi(counter,1) * ( 1/(dy)^2));
    elseif counter == (Ny-3)*(Nx-3)+1 % (2,ny-1) upleft1
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter+1,1) * (1-miu(counter,1)*A(counter,1))/(dx)^2 ...
               -phi(counter-(Nx-3),1) * ( 1/(dy)^2));  
    elseif counter == (Ny-3)*(Nx-3)+2 % (3,ny-1) upleft2
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter+1,1) * (1-miu(counter,1)*A(counter,1))/(dx)^2 ...
               -phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
               -phi(counter-(Nx-3),1) * ( 1/(dy)^2));
    elseif counter >= (Ny-3)*(Nx-3)+3 && counter < (Ny-2)*(Nx-3) % (:,Ny-1) up
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter+1,1) * (1-miu(counter,1)*A(counter,1))/(dx)^2 ...
               -phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
               -phi(counter-2,1) * ( miu(counter-1,1) * A(counter-1,1) )/(dx)^2 ...
               -phi(counter-(Nx-3),1) * ( 1/(dy)^2)); 
    elseif counter == (Ny-2)*(Nx-3) % (Nx-1,Ny-1) up right
        phiNew(counter,1) = 1/(miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)...
            * (-phi(counter-1,1) * (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2 ...
               -phi(counter-2,1) * ( miu(counter-1,1) * A(counter-1,1) )/(dx)^2 ...
               -phi(counter-(Nx-3),1) * ( 1/(dy)^2));
    
    elseif mod (counter,Nx-3) == 1 %(2,:) left1
        phiNew(counter,1) = 1/ ...
                (miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2) *...
                (-(phi(counter+1,1)    * (1-miu(counter,1)*A(counter,1))/(dx)^2)...
                -phi(counter+Nx-3,1) * 1/(dy)^2 ...
                -phi(counter-Nx+3,1) * 1/(dy)^2 ...
                );
    elseif mod (counter,Nx-3) == 2 %(3,:) left2
        phiNew(counter,1) = 1/ ...
                (miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2) *...
               (-(phi(counter+1,1)    * (1-miu(counter,1)*A(counter,1))/(dx)^2)...
                -phi(counter+Nx-3,1) * 1/(dy)^2 ...
                -phi(counter-1,1) * ( ( (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2)) ...
                -phi(counter-Nx+3,1) * 1/(dy)^2 ...
                );
    elseif mod (counter,Nx-3) == 2 %(Nx-1,:) right1
        phiNew(counter,1) = 1/...
                (miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2) *...
                (-phi(counter+Nx-3,1) * 1/(dy)^2 ...
                -phi(counter-2) * (miu(counter-1,1) * A (counter-1,1)) ...
                -phi(counter-1,1) * ( ( (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2)) ...
                -phi(counter-Nx+3,1) * 1/(dy)^2 ...
                );
    else
        phiNew(counter,1) = 1/... % general
                (miu(counter-1,1)*A(counter-1,1)/(dx)^2 - 2*(1-miu(counter,1))/(dx)^2 - 2/(dy)^2)* ...
                (-phi(counter+1,1) * (1-miu(counter,1)*A(couner,1))/(dx)^2 ...
                -phi(counter+Nx-3,1) * 1/(dy)^2 ...
                -phi(counter-2) * (miu(counter-1,1) * A (counter-1,1)) ...
                -phi(counter-1,1) * ( ( (1-miu(counter,1)) * A(counter,1) / (dx)^2 - 2*miu(counter-1,1) * A(counter-1,1) / (dx)^2)) ...
                -phi(counter-Nx+3,1) * 1/(dy)^2 ...
                );
    end   
end
